doctype html
html(lang="en")
    head
        meta(name="viewport", content="width=device-width, initial-scale=1")
        title Domas
        link(href='https://fonts.googleapis.com/css?family=Source+Code+Pro', rel='stylesheet')
        link(rel="stylesheet", href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css")
        link(rel="stylesheet", href="style.css")
    body
        #asteroids-canvas
        .wrap
            h1 Domas Lapinskas
            h2 full stack web developer
            p.social-links
                a(href="https://github.com/domasx2")
                    i.fa.fa-github
                    | Github
                a(href="https://www.linkedin.com/pub/domas-lapinskas/4/240/68")
                    i.fa.fa-linkedin-square
                    | Linkedin

            .nav
                ul
                    li.nav-about 
                        a(href="/") about
                    li.nav-skills
                        a(href="/skills") skills
                    li.nav-open-source
                        a(href="/open-source") open source
            .content
        script.
            if (!Function.prototype.bind) {
              Function.prototype.bind = function (oThis) {
                if (typeof this !== "function") {
                  // closest thing possible to the ECMAScript 5 internal IsCallable function
                  throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
                }

                var aArgs = Array.prototype.slice.call(arguments, 1), 
                    fToBind = this, 
                    fNOP = function () {},
                    fBound = function () {
                      return fToBind.apply(this instanceof fNOP && oThis
                                             ? this
                                             : oThis,
                                           aArgs.concat(Array.prototype.slice.call(arguments)));
                    };

                fNOP.prototype = this.prototype;
                fBound.prototype = new fNOP();

                return fBound;
              };
            }
        script(src="app.js")
        script#tpl-about(type="text/template")
            include ./_about.jade
        script#tpl-skills(type="text/template")
            include ./_skills.jade
        script#tpl-open-source(type="text/template")
            include ./_open-source.jade
        script.
            //insert livereload snippet on localhost TODO: on debug instead
            if(location.host.split(':')[0] === 'localhost' ) {
                document.write('<script src="http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1"></' + 'script>');
            }
